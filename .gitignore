# Terraform and cloud state files
*.tfstate
*.tfstate.backup
*.tfvars
terraform/main.tf
# Sensitive config
src/main/resources/conf.properties
.env
*.key
*.pem

# IntelliJ/VSCode junk
.idea/
.vscode/

# Build output
target/
*.class
*.jar
*.tfstate
*.tfstate.backup
*.key
*.pem
.env
src/main/resources/conf.properties
terraform/main.tf
.terraform/
.idea/
.vscode/
target/
*.class
*.log

# idea
/.idea
/target
*.iml

### Mac ###
.DS_Store

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
